<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sofeware-Engineer on @bGZoCg</title>
    <link>http://x.com/zh/tags/sofeware-engineer/</link>
    <description>Recent content in Sofeware-Engineer on @bGZoCg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Thu, 10 Jun 2021 14:42:00 +0800</lastBuildDate>
    
	<atom:link href="http://x.com/zh/tags/sofeware-engineer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>软件工程概论</title>
      <link>http://x.com/zh/introduction-to-software-engineering/</link>
      <pubDate>Thu, 10 Jun 2021 14:42:00 +0800</pubDate>
      
      <guid>http://x.com/zh/introduction-to-software-engineering/</guid>
      <description>软件工程导论 在课程上讲了几个月前我在TG上学到的 Agile Development-敏捷开发的主要步骤, 当初我在业余时间接触到的碎片化的知识原来是这样嵌入到这样的理论中去的, 我坐落在最后一排, 举目向前望, 虽说座无虚席, 但基本没有人听这部分的内容, 更不要说内化思想了. 老师的PPT里面并没有提及敏捷开发组织为了宣发而建立的网站.
为什么说提及这些额外的东西对我来说这样重要呢? 这些重要的内容能让我相信这样的信条是真实且存在的, 我不会认为这就是口中无用的言论, 这是开发人员的最根本的基础. 课后我对一直以来我对国内教学的偏见而汗颜, 这由原苏联教育家 伊·安·凯洛夫 发明的填鸭式教育依旧活跃在国内普遍的高校生活中, 伴随我度过十二年的教育方式往我嗤之以鼻, 我很享受网络上开源的循循善诱的教导方式, 新鲜是一方面, 门槛低是另一方面, 我总不会因为铺天盖地的理论而啧啧称赞, 相反, 睡觉是我唯一选择的方式, 我在课上睡觉, 课下预复习, 平时应付, 考前冲锋, 及格光荣. 悲夫&amp;hellip;
无独有偶, 阮一峰 也在他的博客上谈了这门学科, 关于软件工程的最大难题.
一些你需要掌握的概念  概论   软件: 软件是计算机系统中与硬件相互依存的另一部分，它是包括程序，数据及其相关文档的完整集合
  软件危机？软件危机包含哪两点？软件危机产生的原因是什么？
 软件危机是指在计算机软件开发与维护过程中所遇到的一系列严重问题。包括两点  如何开发软件，以满足对软件日益增长的需求； 如何维护数量不断膨胀的已有软件。   软件开发和维护过程中存在的许多严重问题，一方面与软件本身的特点有关，另一方面也和软件开发与维护的方法不正确有关。具体表现如下：  软件是逻辑部件而不是物理部件。 软件的规模越来越大，复杂性越来越大。 轻视需求分析的重要性，轻视软件维护的错误观点和方法      什么叫软件工程？
 1968年在第一届NATO会议上的早期定义： &amp;ldquo;建立并使用完善的工程化原则，以较经济的手段获得能在实际机器上有效运行的可靠软件的一系列方法”。 1993年1EEE的定义： &amp;ldquo;1软件工程是：把系统的、规范的、可度量的途径应用于软件开发、运行和维护过程，也就是把工程应用于软件； ②进而研究⑦实现的途径&amp;rdquo;。 我们国家最近定义：软件工程是指导计算机软件开发和维护的工程学科。它采用工程的概念、原理、技术和方法来开发与维护软件，把经过时间考验而证明正确的管理技术和当前能够得到的最好的技术方法结合起来。    两种软件工程方法学开发软件时要建立哪些模型？</description>
    </item>
    
  </channel>
</rss>
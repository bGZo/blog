<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cpp on @bGZoCg</title>
    <link>http://x.com/zh/tags/cpp/</link>
    <description>Recent content in Cpp on @bGZoCg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Thu, 21 Jan 2021 14:31:44 +0800</lastBuildDate>
    
	<atom:link href="http://x.com/zh/tags/cpp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Stackover C&#43;&#43; 热门问题</title>
      <link>http://x.com/zh/210121-stackover-top-notes/</link>
      <pubDate>Thu, 21 Jan 2021 14:31:44 +0800</pubDate>
      
      <guid>http://x.com/zh/210121-stackover-top-notes/</guid>
      <description>&lt;p&gt;问题皆来源于下面的两个链接&lt;sup&gt;&lt;a href=&#34;#j1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, 本文做了部分的摘录, 感谢翻译：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/c%2b%2b?tab=Votes&#34;&gt;https://stackoverflow.com/questions/tagged/c%2b%2b?tab=Votes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/c?tab=Votes&#34;&gt;https://stackoverflow.com/questions/tagged/c?tab=Votes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>内大小学期开发--选课管理系统</title>
      <link>http://x.com/zh/200901-imu-short-term-develop/</link>
      <pubDate>Tue, 01 Sep 2020 22:21:38 +0800</pubDate>
      
      <guid>http://x.com/zh/200901-imu-short-term-develop/</guid>
      <description>&lt;p&gt;该怎么去面对自己在一个月的时间里没有好好写好 &amp;ldquo;学生选课系统&amp;rdquo; 这一个简单的 &lt;code&gt;Cpp&lt;/code&gt; 程序, 这篇文章鸽了很久, 我多少希望自己逃避这个对我造成不小阴影的时间段, 我不知道那些跟着联盟导师团伙做项目的同学增长了多少知识, 但我在一个月的时间里缺乏真的效率很低, 多次心态接近低到零点爆炸, 甚至开始怀疑自己是不是真的适合这门学科. 说多了也只是为自己的低能找借口开脱, 我总结以下几个方面, 附带一些槽点, 诚恳总结如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;总结:
&lt;ul&gt;
&lt;li&gt;前期进度开发出现问题时, 一定要即时和其他成员进行反馈, &lt;strong&gt;不可以拖延&lt;/strong&gt;, 像现在的工作岗位一样, 工作时间拖延, 那就占用你的成长时间来弥补.&lt;/li&gt;
&lt;li&gt;代码&lt;strong&gt;预处理&lt;/strong&gt;太多造成冗余项过多, 难以维护, 以及&lt;strong&gt;整体逻辑结构&lt;/strong&gt;必须在实施前去实现一下, 这样可以在码字的时候为以后做更多的打算. 实际开发中走一步看一步造成了不断地修改重复代码及标记变量, 而后再去维护更多的函数, 维护再度提升一个量级. 写代码的时候必须&lt;strong&gt;警惕过多的预处理&lt;/strong&gt;, 一定有更好的方式.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;尽量用更省力的库&lt;/strong&gt;, 不要重复造不必要的轮子. 在实际开发中, 我曾避免使用可托容的 &lt;code&gt;vector&lt;/code&gt;, 而用双数组来代替之, 复杂度提升一个量级, 何苦呢?&lt;/li&gt;
&lt;li&gt;做好最坏的打算, 不要想着在一个染缸里摸鱼. 实际开发中因为太卷, 大家走一步看一步, 前期不必要的要求到后期都成为了必要项. 这样子强制让人一起绕着卷王加班的情景真是和现 996 如出一辙.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>